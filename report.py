
import pandas as pd
import numpy as np
from jinja2 import Template
import matplotlib.pyplot as plt

def compute_stats(df: pd.DataFrame):
    if df.empty:
        return {
            "trades": 0, "winrate": 0, "profit_factor": 0,
            "net_profit": 0, "max_dd": 0
        }
    closed = df[df["status"]=="closed"].copy()
    trades = len(closed)
    wins = (closed["pnl"] > 0).sum()
    winrate = (wins / trades * 100) if trades else 0
    gross_profit = closed.loc[closed["pnl"]>0, "pnl"].sum()
    gross_loss = -closed.loc[closed["pnl"]<0, "pnl"].sum()
    profit_factor = (gross_profit / gross_loss) if gross_loss>0 else np.inf
    net_profit = closed["pnl"].sum()
    # equity curve
    closed = closed.sort_values("ts")
    equity = closed["pnl"].cumsum()
    peak = equity.cummax()
    dd = (equity - peak)
    max_dd = dd.min()
    return {
        "trades": trades,
        "winrate": round(winrate,2),
        "profit_factor": round(profit_factor,2) if np.isfinite(profit_factor) else "∞",
        "net_profit": round(net_profit,4),
        "max_dd": round(max_dd,4)
    }, equity

def plot_equity(equity: pd.Series, outpath: str):
    plt.figure()
    equity.plot()
    plt.title("Equity Curve")
    plt.xlabel("Trade #")
    plt.ylabel("Cumulative PnL (USDT)")
    plt.tight_layout()
    plt.savefig(outpath)
    plt.close()

HTML_TMPL = """
<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>EMA20 Breakout Report</title>
<style>
body{font-family:Arial,Helvetica,sans-serif;margin:20px;color:#111}
.grid{display:grid;grid-template-columns:repeat(5,1fr);gap:12px;margin-bottom:16px}
.card{padding:12px;border:1px solid #ddd;border-radius:12px}
table{width:100%;border-collapse:collapse}
th,td{padding:8px;border-bottom:1px solid #eee;text-align:right}
th:first-child, td:first-child{text-align:left}
.small{color:#555;font-size:12px}
img{max-width:100%;height:auto;border:1px solid #ddd;border-radius:12px}
</style>
</head>
<body>
<h2>EMA20 Breakout — TradingView-style Report</h2>
<div class="grid">
 <div class="card"><b>Total Trades</b><div>{{stats.trades}}</div></div>
 <div class="card"><b>Winrate</b><div>{{stats.winrate}}%</div></div>
 <div class="card"><b>Profit Factor</b><div>{{stats.profit_factor}}</div></div>
 <div class="card"><b>Net Profit</b><div>{{stats.net_profit}}</div></div>
 <div class="card"><b>Max Drawdown</b><div>{{stats.max_dd}}</div></div>
</div>
<img src="{{ equity_img }}" alt="Equity Curve"/>
<h3>Trade List</h3>
<table>
 <thead><tr>
  <th>ID</th><th>Time</th><th>Side</th><th>Entry</th><th>Qty</th><th>SL</th><th>TP</th><th>Exit</th><th>PNL</th>
 </tr></thead>
 <tbody>
 {% for _,r in trades.iterrows() %}
  <tr>
   <td>{{r.id}}</td><td class="small">{{r.ts}}</td><td>{{r.side}}</td>
   <td>{{"%.4f"|format(r.entry)}}</td><td>{{"%.6f"|format(r.qty)}}</td>
   <td>{{"%.4f"|format(r.sl)}}</td><td>{{"%.4f"|format(r.tp)}}</td>
   <td>{{"%.4f"|format(r.exit_price) if r.exit_price==r.exit_price else "-"}}</td>
   <td>{{"%.4f"|format(r.pnl) if r.pnl==r.pnl else "-"}}</td>
  </tr>
 {% endfor %}
 </tbody>
</table>
<p class="small">Generated by bybit_ema20_bot</p>
</body></html>
"""

def render_report(df: pd.DataFrame, out_html: str, equity_img: str):
    stats, equity = compute_stats(df)
    plot_equity(equity if equity is not None else pd.Series(dtype=float), equity_img)
    html = Template(HTML_TMPL).render(stats=stats, trades=df, equity_img=equity_img.split("/")[-1])
    with open(out_html, "w", encoding="utf-8") as f:
        f.write(html)
